%matplotlib inline
import numpy as np
import matplotlib.pyplot as plt
np.random.seed(0)
max_n = 1000
sigma = 1
beta0, beta1, beta2, beta3 = 3, -2, 0.5, 1
array_beta = np.array([beta1, beta2, beta3])
array_x = np.random.uniform(-1.8, 1.5, max_n)
list2d_X = []
for x in array_x:
    list2d_X += [[x, x**2, x**3]]
arr2d_X = np.array(list2d_X)
array_f = np.dot(arr2d_X, array_beta) + beta0
array_y = array_f + np.random.normal(0, sigma, max_n)
plt.scatter(array_x, array_y)




list2d_maxX = []
for x in array_x:
    list2d_maxX += [[x, x**2, x**3, x**4, x**5]]
arr2d_maxX = np.array(list2d_maxX)




from sklearn.linear_model import LinearRegression
reg = LinearRegression()
list_n = range(10,151,5)
for k in range(1,6):
    list_BICk = []
    for n in list_n:
        reg.fit(arr2d_maxX[:n,:k], array_y[:n])
        array_yhat = reg.predict(arr2d_maxX[:n,:k])
        a = (n/2)*np.log(2*np.pi*(sigma**2))
        b = 1/(2*(sigma**2))*sum((array_y[:n]-array_yhat)**2)
        c = ((k+1)/2)*np.log(n)
        list_BICk += [a+b+c]
    plt.plot(list_n, list_BICk, label="k={0}".format(k))
plt.legend(loc="upper left")
